import os
from launch import LaunchDescription
from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument, ExecuteProcess
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution
from launch_ros.actions import Node
from launch_ros.substitutions import FindPackageShare

def generate_launch_description():
    # Get package paths
    turtlebot3_gazebo = FindPackageShare('turtlebot3_gazebo')
    turtlebot3_bringup = FindPackageShare('turtlebot3_bringup')
    nav2_bringup = FindPackageShare('nav2_bringup')
    
    # Declare arguments
    use_sim_time = LaunchConfiguration('use_sim_time', default='true')
    model = LaunchConfiguration('model', default='waffle')
    
    # Get config file path
    config_dir = os.path.join(os.path.dirname(__file__), '..', 'config')
    nav2_params_file = os.path.join(config_dir, 'nav2_params.yaml')
    
    # Get world file path
    world_dir = os.path.join(os.path.dirname(__file__), '..', 'worlds')
    world_file = os.path.join(world_dir, 'turtlebot3_waypoints.world')
    
    # Get map file path
    map_dir = os.path.join(os.path.dirname(__file__), '..', 'maps')
    map_file = os.path.join(map_dir, 'map.yaml')
    
    return LaunchDescription([
        # Declare launch arguments
        DeclareLaunchArgument(
            'use_sim_time',
            default_value='true',
            description='Use simulation time'
        ),
        DeclareLaunchArgument(
            'model',
            default_value='waffle',
            description='TurtleBot3 model'
        ),
        
        # Gazebo
        IncludeLaunchDescription(
            PythonLaunchDescriptionSource(
                PathJoinSubstitution([turtlebot3_gazebo, 'launch', 'empty_world.launch.py'])
            ),
            launch_arguments={
                'use_sim_time': use_sim_time,
                'world': world_file,
                'model': model,
            }.items()
        ),
        
        # TurtleBot3 bringup
        IncludeLaunchDescription(
            PythonLaunchDescriptionSource(
                PathJoinSubstitution([turtlebot3_bringup, 'launch', 'robot.launch.py'])
            ),
            launch_arguments={
                'use_sim_time': use_sim_time,
                'model': model,
            }.items()
        ),
        
        # Nav2
        IncludeLaunchDescription(
            PythonLaunchDescriptionSource(
                PathJoinSubstitution([nav2_bringup, 'launch', 'bringup_launch.py'])
            ),
            launch_arguments={
                'use_sim_time': use_sim_time,
                'params_file': nav2_params_file,
                'map': map_file,
            }.items()
        ),
        
        # Waypoint Manager Node
        Node(
            package='waypoint_manager',
            executable='waypoint_manager_node',
            name='waypoint_manager',
            output='screen',
            parameters=[{'use_sim_time': use_sim_time}]
        ),
        
        # RViz
        Node(
            package='rviz2',
            executable='rviz2',
            name='rviz2',
            output='screen',
            arguments=['-d', os.path.join(os.path.dirname(__file__), '..', 'rviz', 'nav2_default_view.rviz')]
        ),
    ])
